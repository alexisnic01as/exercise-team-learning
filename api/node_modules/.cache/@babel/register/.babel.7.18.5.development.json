{"{\"assumptions\":{},\"sourceRoot\":\"/Users/alexisnicolas/Documents/GitHub/exercise-team-learning/api/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/alexisnicolas/Documents/GitHub/exercise-team-learning/api\",\"filename\":\"/Users/alexisnicolas/Documents/GitHub/exercise-team-learning/api/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/alexisnicolas/Documents/GitHub/exercise-team-learning/api\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.5:development":{"value":{"code":"\"use strict\";\n\nvar _templateObject;\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar _require = require('apollo-server-express'),\n    ApolloServer = _require.ApolloServer,\n    gql = _require.gql;\n\nvar express = require('express');\n\nvar mongoose = require(\"mongoose\");\n\nvar app = express(); // A schema is a collection of type definitions (hence \"typeDefs\")\n// that together define the \"shape\" of queries that are executed against\n// your data.\n\nvar typeDefs = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  # Comments in GraphQL strings (such as this one) start with the hash (#) symbol.\\n\\n  # This \\\"Book\\\" type defines the queryable fields for every book in our data source.\\n  type Book {\\n    title: String\\n    author: String\\n  }\\n\\n  # The \\\"Query\\\" type is special: it lists all of the available queries that\\n  # clients can execute, along with the return type for each. In this\\n  # case, the \\\"books\\\" query returns an array of zero or more Books (defined above).\\n  type Query {\\n    books: [Book]\\n  }\\n\"])));\nvar _books = [{\n  title: 'The Awakening',\n  author: 'Kate Chopin'\n}, {\n  title: 'City of Glass',\n  author: 'Paul Auster'\n}]; // Resolvers define the technique for fetching the types defined in the\n// schema. This resolver retrieves books from the \"books\" array above.\n\nvar resolvers = {\n  Query: {\n    books: function books() {\n      return _books;\n    }\n  }\n}; // The ApolloServer constructor requires two parameters: your schema\n// definition and your set of resolvers.\n\nvar server = new ApolloServer({\n  typeDefs: typeDefs,\n  resolvers: resolvers,\n  csrfPrevention: true,\n  cache: 'bounded'\n});\nserver.start().then(function (res) {\n  server.applyMiddleware({\n    app: app\n  });\n  var url = \"mongodb+srv://tigerking:wphPpplcHRwNdv29@riceapps2020-21-ppsrv.gcp.mongodb.net/osa_2022?retryWrites=true&w=majority\";\n  mongoose.connect(url);\n  mongoose.connection.on(\"connected\", function () {\n    console.log(\"Mongoose connected\"); // console.log(\"Mongoose connected to \" + url);\n  });\n  app.listen({\n    port: 4000\n  }, function () {\n    return console.log(\"\\uD83D\\uDE80 Server ready at http://localhost:4000\".concat(server.graphqlPath));\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiQXBvbGxvU2VydmVyIiwiZ3FsIiwiZXhwcmVzcyIsIm1vbmdvb3NlIiwiYXBwIiwidHlwZURlZnMiLCJib29rcyIsInRpdGxlIiwiYXV0aG9yIiwicmVzb2x2ZXJzIiwiUXVlcnkiLCJzZXJ2ZXIiLCJjc3JmUHJldmVudGlvbiIsImNhY2hlIiwic3RhcnQiLCJ0aGVuIiwicmVzIiwiYXBwbHlNaWRkbGV3YXJlIiwidXJsIiwiY29ubmVjdCIsImNvbm5lY3Rpb24iLCJvbiIsImNvbnNvbGUiLCJsb2ciLCJsaXN0ZW4iLCJwb3J0IiwiZ3JhcGhxbFBhdGgiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9hbGV4aXNuaWNvbGFzL0RvY3VtZW50cy9HaXRIdWIvZXhlcmNpc2UtdGVhbS1sZWFybmluZy9hcGkvIiwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IEFwb2xsb1NlcnZlciwgZ3FsIH0gPSByZXF1aXJlKCdhcG9sbG8tc2VydmVyLWV4cHJlc3MnKTtcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG4vLyBBIHNjaGVtYSBpcyBhIGNvbGxlY3Rpb24gb2YgdHlwZSBkZWZpbml0aW9ucyAoaGVuY2UgXCJ0eXBlRGVmc1wiKVxuLy8gdGhhdCB0b2dldGhlciBkZWZpbmUgdGhlIFwic2hhcGVcIiBvZiBxdWVyaWVzIHRoYXQgYXJlIGV4ZWN1dGVkIGFnYWluc3Rcbi8vIHlvdXIgZGF0YS5cbmNvbnN0IHR5cGVEZWZzID0gZ3FsYFxuICAjIENvbW1lbnRzIGluIEdyYXBoUUwgc3RyaW5ncyAoc3VjaCBhcyB0aGlzIG9uZSkgc3RhcnQgd2l0aCB0aGUgaGFzaCAoIykgc3ltYm9sLlxuXG4gICMgVGhpcyBcIkJvb2tcIiB0eXBlIGRlZmluZXMgdGhlIHF1ZXJ5YWJsZSBmaWVsZHMgZm9yIGV2ZXJ5IGJvb2sgaW4gb3VyIGRhdGEgc291cmNlLlxuICB0eXBlIEJvb2sge1xuICAgIHRpdGxlOiBTdHJpbmdcbiAgICBhdXRob3I6IFN0cmluZ1xuICB9XG5cbiAgIyBUaGUgXCJRdWVyeVwiIHR5cGUgaXMgc3BlY2lhbDogaXQgbGlzdHMgYWxsIG9mIHRoZSBhdmFpbGFibGUgcXVlcmllcyB0aGF0XG4gICMgY2xpZW50cyBjYW4gZXhlY3V0ZSwgYWxvbmcgd2l0aCB0aGUgcmV0dXJuIHR5cGUgZm9yIGVhY2guIEluIHRoaXNcbiAgIyBjYXNlLCB0aGUgXCJib29rc1wiIHF1ZXJ5IHJldHVybnMgYW4gYXJyYXkgb2YgemVybyBvciBtb3JlIEJvb2tzIChkZWZpbmVkIGFib3ZlKS5cbiAgdHlwZSBRdWVyeSB7XG4gICAgYm9va3M6IFtCb29rXVxuICB9XG5gO1xuY29uc3QgYm9va3MgPSBbXG4gICAge1xuICAgICAgdGl0bGU6ICdUaGUgQXdha2VuaW5nJyxcbiAgICAgIGF1dGhvcjogJ0thdGUgQ2hvcGluJyxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnQ2l0eSBvZiBHbGFzcycsXG4gICAgICBhdXRob3I6ICdQYXVsIEF1c3RlcicsXG4gICAgfSxcbiAgXTtcbiAgLy8gUmVzb2x2ZXJzIGRlZmluZSB0aGUgdGVjaG5pcXVlIGZvciBmZXRjaGluZyB0aGUgdHlwZXMgZGVmaW5lZCBpbiB0aGVcbi8vIHNjaGVtYS4gVGhpcyByZXNvbHZlciByZXRyaWV2ZXMgYm9va3MgZnJvbSB0aGUgXCJib29rc1wiIGFycmF5IGFib3ZlLlxuY29uc3QgcmVzb2x2ZXJzID0ge1xuICAgIFF1ZXJ5OiB7XG4gICAgICBib29rczogKCkgPT4gYm9va3MsXG4gICAgfSxcbiAgfTtcbi8vIFRoZSBBcG9sbG9TZXJ2ZXIgY29uc3RydWN0b3IgcmVxdWlyZXMgdHdvIHBhcmFtZXRlcnM6IHlvdXIgc2NoZW1hXG4vLyBkZWZpbml0aW9uIGFuZCB5b3VyIHNldCBvZiByZXNvbHZlcnMuXG5jb25zdCBzZXJ2ZXIgPSBuZXcgQXBvbGxvU2VydmVyKHtcbiAgICB0eXBlRGVmcyxcbiAgICByZXNvbHZlcnMsXG4gICAgY3NyZlByZXZlbnRpb246IHRydWUsXG4gICAgY2FjaGU6ICdib3VuZGVkJyxcbiAgfSk7XG5cbiAgc2VydmVyLnN0YXJ0KCkudGhlbigocmVzKSA9PiB7XG4gICAgc2VydmVyLmFwcGx5TWlkZGxld2FyZSh7IGFwcCB9KTtcbiAgICBjb25zdCB1cmwgPVxuICAgICAgXCJtb25nb2RiK3NydjovL3RpZ2Vya2luZzp3cGhQcHBsY0hSd05kdjI5QHJpY2VhcHBzMjAyMC0yMS1wcHNydi5nY3AubW9uZ29kYi5uZXQvb3NhXzIwMjI/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5XCI7XG4gICAgbW9uZ29vc2UuY29ubmVjdCh1cmwpO1xuICAgIG1vbmdvb3NlLmNvbm5lY3Rpb24ub24oXCJjb25uZWN0ZWRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgY29uc29sZS5sb2coXCJNb25nb29zZSBjb25uZWN0ZWRcIik7XG4gICAgICAvLyBjb25zb2xlLmxvZyhcIk1vbmdvb3NlIGNvbm5lY3RlZCB0byBcIiArIHVybCk7XG4gICAgfSk7XG4gIFxuICAgIGFwcC5saXN0ZW4oeyBwb3J0OiA0MDAwIH0sICgpID0+XG4gICAgICBjb25zb2xlLmxvZyhg8J+agCBTZXJ2ZXIgcmVhZHkgYXQgaHR0cDovL2xvY2FsaG9zdDo0MDAwJHtzZXJ2ZXIuZ3JhcGhxbFBhdGh9YClcbiAgICApO1xuICB9KTsiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGVBQThCQSxPQUFPLENBQUMsdUJBQUQsQ0FBckM7QUFBQSxJQUFRQyxZQUFSLFlBQVFBLFlBQVI7QUFBQSxJQUFzQkMsR0FBdEIsWUFBc0JBLEdBQXRCOztBQUNBLElBQU1DLE9BQU8sR0FBR0gsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUksUUFBUSxHQUFHSixPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFFQSxJQUFNSyxHQUFHLEdBQUdGLE9BQU8sRUFBbkIsQyxDQUVBO0FBQ0E7QUFDQTs7QUFDQSxJQUFNRyxRQUFRLEdBQUdKLEdBQUgsdWtCQUFkO0FBZ0JBLElBQU1LLE1BQUssR0FBRyxDQUNWO0VBQ0VDLEtBQUssRUFBRSxlQURUO0VBRUVDLE1BQU0sRUFBRTtBQUZWLENBRFUsRUFLVjtFQUNFRCxLQUFLLEVBQUUsZUFEVDtFQUVFQyxNQUFNLEVBQUU7QUFGVixDQUxVLENBQWQsQyxDQVVFO0FBQ0Y7O0FBQ0EsSUFBTUMsU0FBUyxHQUFHO0VBQ2RDLEtBQUssRUFBRTtJQUNMSixLQUFLLEVBQUU7TUFBQSxPQUFNQSxNQUFOO0lBQUE7RUFERjtBQURPLENBQWxCLEMsQ0FLQTtBQUNBOztBQUNBLElBQU1LLE1BQU0sR0FBRyxJQUFJWCxZQUFKLENBQWlCO0VBQzVCSyxRQUFRLEVBQVJBLFFBRDRCO0VBRTVCSSxTQUFTLEVBQVRBLFNBRjRCO0VBRzVCRyxjQUFjLEVBQUUsSUFIWTtFQUk1QkMsS0FBSyxFQUFFO0FBSnFCLENBQWpCLENBQWY7QUFPRUYsTUFBTSxDQUFDRyxLQUFQLEdBQWVDLElBQWYsQ0FBb0IsVUFBQ0MsR0FBRCxFQUFTO0VBQzNCTCxNQUFNLENBQUNNLGVBQVAsQ0FBdUI7SUFBRWIsR0FBRyxFQUFIQTtFQUFGLENBQXZCO0VBQ0EsSUFBTWMsR0FBRyxHQUNQLHFIQURGO0VBRUFmLFFBQVEsQ0FBQ2dCLE9BQVQsQ0FBaUJELEdBQWpCO0VBQ0FmLFFBQVEsQ0FBQ2lCLFVBQVQsQ0FBb0JDLEVBQXBCLENBQXVCLFdBQXZCLEVBQW9DLFlBQVk7SUFDOUNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG9CQUFaLEVBRDhDLENBRTlDO0VBQ0QsQ0FIRDtFQUtBbkIsR0FBRyxDQUFDb0IsTUFBSixDQUFXO0lBQUVDLElBQUksRUFBRTtFQUFSLENBQVgsRUFBMkI7SUFBQSxPQUN6QkgsT0FBTyxDQUFDQyxHQUFSLDZEQUF1RFosTUFBTSxDQUFDZSxXQUE5RCxFQUR5QjtFQUFBLENBQTNCO0FBR0QsQ0FiRCJ9","map":{"version":3,"names":["require","ApolloServer","gql","express","mongoose","app","typeDefs","books","title","author","resolvers","Query","server","csrfPrevention","cache","start","then","res","applyMiddleware","url","connect","connection","on","console","log","listen","port","graphqlPath"],"sourceRoot":"/Users/alexisnicolas/Documents/GitHub/exercise-team-learning/api/","sources":["index.js"],"sourcesContent":["const { ApolloServer, gql } = require('apollo-server-express');\nconst express = require('express');\nconst mongoose = require(\"mongoose\");\n\nconst app = express();\n\n// A schema is a collection of type definitions (hence \"typeDefs\")\n// that together define the \"shape\" of queries that are executed against\n// your data.\nconst typeDefs = gql`\n  # Comments in GraphQL strings (such as this one) start with the hash (#) symbol.\n\n  # This \"Book\" type defines the queryable fields for every book in our data source.\n  type Book {\n    title: String\n    author: String\n  }\n\n  # The \"Query\" type is special: it lists all of the available queries that\n  # clients can execute, along with the return type for each. In this\n  # case, the \"books\" query returns an array of zero or more Books (defined above).\n  type Query {\n    books: [Book]\n  }\n`;\nconst books = [\n    {\n      title: 'The Awakening',\n      author: 'Kate Chopin',\n    },\n    {\n      title: 'City of Glass',\n      author: 'Paul Auster',\n    },\n  ];\n  // Resolvers define the technique for fetching the types defined in the\n// schema. This resolver retrieves books from the \"books\" array above.\nconst resolvers = {\n    Query: {\n      books: () => books,\n    },\n  };\n// The ApolloServer constructor requires two parameters: your schema\n// definition and your set of resolvers.\nconst server = new ApolloServer({\n    typeDefs,\n    resolvers,\n    csrfPrevention: true,\n    cache: 'bounded',\n  });\n\n  server.start().then((res) => {\n    server.applyMiddleware({ app });\n    const url =\n      \"mongodb+srv://tigerking:wphPpplcHRwNdv29@riceapps2020-21-ppsrv.gcp.mongodb.net/osa_2022?retryWrites=true&w=majority\";\n    mongoose.connect(url);\n    mongoose.connection.on(\"connected\", function () {\n      console.log(\"Mongoose connected\");\n      // console.log(\"Mongoose connected to \" + url);\n    });\n  \n    app.listen({ port: 4000 }, () =>\n      console.log(`🚀 Server ready at http://localhost:4000${server.graphqlPath}`)\n    );\n  });"],"mappings":";;;;;;AAAA,eAA8BA,OAAO,CAAC,uBAAD,CAArC;AAAA,IAAQC,YAAR,YAAQA,YAAR;AAAA,IAAsBC,GAAtB,YAAsBA,GAAtB;;AACA,IAAMC,OAAO,GAAGH,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAMK,GAAG,GAAGF,OAAO,EAAnB,C,CAEA;AACA;AACA;;AACA,IAAMG,QAAQ,GAAGJ,GAAH,ukBAAd;AAgBA,IAAMK,MAAK,GAAG,CACV;EACEC,KAAK,EAAE,eADT;EAEEC,MAAM,EAAE;AAFV,CADU,EAKV;EACED,KAAK,EAAE,eADT;EAEEC,MAAM,EAAE;AAFV,CALU,CAAd,C,CAUE;AACF;;AACA,IAAMC,SAAS,GAAG;EACdC,KAAK,EAAE;IACLJ,KAAK,EAAE;MAAA,OAAMA,MAAN;IAAA;EADF;AADO,CAAlB,C,CAKA;AACA;;AACA,IAAMK,MAAM,GAAG,IAAIX,YAAJ,CAAiB;EAC5BK,QAAQ,EAARA,QAD4B;EAE5BI,SAAS,EAATA,SAF4B;EAG5BG,cAAc,EAAE,IAHY;EAI5BC,KAAK,EAAE;AAJqB,CAAjB,CAAf;AAOEF,MAAM,CAACG,KAAP,GAAeC,IAAf,CAAoB,UAACC,GAAD,EAAS;EAC3BL,MAAM,CAACM,eAAP,CAAuB;IAAEb,GAAG,EAAHA;EAAF,CAAvB;EACA,IAAMc,GAAG,GACP,qHADF;EAEAf,QAAQ,CAACgB,OAAT,CAAiBD,GAAjB;EACAf,QAAQ,CAACiB,UAAT,CAAoBC,EAApB,CAAuB,WAAvB,EAAoC,YAAY;IAC9CC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAD8C,CAE9C;EACD,CAHD;EAKAnB,GAAG,CAACoB,MAAJ,CAAW;IAAEC,IAAI,EAAE;EAAR,CAAX,EAA2B;IAAA,OACzBH,OAAO,CAACC,GAAR,6DAAuDZ,MAAM,CAACe,WAA9D,EADyB;EAAA,CAA3B;AAGD,CAbD"}},"mtime":1655774028402}}